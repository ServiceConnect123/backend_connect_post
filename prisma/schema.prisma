// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x", "linux-musl", "debian-openssl-3.0.x", "darwin"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Company {
  id        String   @id @default(cuid())
  name      String
  nit       String   @unique
  email     String
  phone     String
  address   String
  country   String
  city      String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  
  // Relationships
  users     User[]

  @@map("companies")
}

enum UserRole {
  ADMIN
  USER
  MODERATOR
}

model User {
  id           String   @id @default(cuid())
  supabaseUuid String   @unique @map("supabase_uuid") // UUID de Supabase Auth
  email        String   @unique
  firstName    String   @map("first_name")
  lastName     String   @map("last_name")
  role         UserRole @default(USER)
  companyId    String   @map("company_id")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")
  
  // Relationships
  company      Company  @relation(fields: [companyId], references: [id], onDelete: Cascade)
  posts        Post[]

  @@map("users")
}

model Post {
  id          String   @id @default(cuid())
  title       String
  content     String
  isPublished Boolean  @default(false) @map("is_published")
  tags        String[]
  authorId    String   @map("author_id")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  // Relationships
  author      User     @relation(fields: [authorId], references: [id], onDelete: Cascade)

  @@map("posts")
}
