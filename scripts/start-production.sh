#!/bin/sh

# Script de inicio para producci√≥n
# Asegura que Prisma Client est√© correctamente generado antes de iniciar la aplicaci√≥n

echo "üöÄ Iniciando aplicaci√≥n en producci√≥n..."

# Verificar variables de entorno cr√≠ticas
if [ -z "$DATABASE_URL" ]; then
    echo "‚ùå ERROR: DATABASE_URL no est√° configurada"
    exit 1
fi

if [ -z "$PORT" ]; then
    echo "‚ö†Ô∏è  WARNING: PORT no est√° configurada, usando 3000 por defecto"
    export PORT=3000
fi

# Configurar NODE_ENV si no est√° configurado
if [ -z "$NODE_ENV" ]; then
    export NODE_ENV=production
fi

echo "üîç Verificando cliente de Prisma..."
if [ ! -d "node_modules/.prisma/client" ]; then
    echo "üì¶ Cliente de Prisma no encontrado, generando para el entorno actual..."
    npx prisma generate --schema=./prisma/schema.prisma
    
    if [ ! -d "node_modules/.prisma/client" ]; then
        echo "‚ùå ERROR: No se pudo generar el cliente de Prisma"
        echo "Informaci√≥n del sistema:"
        uname -a
        node --version
        npm --version
        ls -la node_modules/@prisma/ || echo "No @prisma directory found"
        exit 1
    fi
else
    echo "‚úÖ Cliente de Prisma encontrado"
    # Verificar que los binarios est√©n disponibles
    if [ ! -f "node_modules/.prisma/client/libquery_engine-linux-musl-openssl-3.0.x.so.node" ] && [ ! -f "node_modules/.prisma/client/libquery_engine-linux-musl.so.node" ]; then
        echo "‚ö†Ô∏è  Binarios de Prisma no encontrados para esta plataforma, regenerando..."
        npx prisma generate --schema=./prisma/schema.prisma
    fi
fi

echo "‚úÖ Cliente de Prisma verificado y listo"
echo "üåü Iniciando aplicaci√≥n NestJS..."

# Iniciar la aplicaci√≥n
exec node dist/main.js
